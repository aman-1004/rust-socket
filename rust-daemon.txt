anomaly and action


detect anomaly -> trigger action

NetworkDisconnectionthread {
  // every 10 seconds check connection.
  // if not connecting trigger NetworkDisconnection Event. 
}

enum Anomaly {
  NetworkDisconnection
}

fn NetworkDisconnectAction() {
  // start tcpdump
}


fn 
{
  let mut success;
  for i in 1..10 {
    success = checkConnection()
  }
  if ! success {
    action(datastructure);
  }

}

fn main () {
  addEventListener(Anomaly::NetworkDisconnection, NetworkDisconnectionAction);
}
